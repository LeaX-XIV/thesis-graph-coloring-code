#version 460

layout(set = 0, binding = 0) buffer InAoBuffer {
    int Ao[];
};

layout(set = 0, binding = 1) buffer InAcBuffer {
    int Ac[];
};

layout(set = 0, binding = 2) buffer InOutColors {
    int colors[];
};


layout(local_size_x = 512, local_size_y = 1, local_size_z = 1) in;

bool check(in uint index, in uint first, in uint last)
{
    int current_color = colors[index];
    for(uint k = first; k < last; k++)
    {
        if (current_color == colors[Ao[k]] && Ao[k] > index)
        {
            return false;
        }
    }
    return true;
}

void main()
{
    uint index = gl_GlobalInvocationID.x;
    uvec2 first_last = uvec2(Ao[index] - Ao[0], Ao[index + 1] - Ao[0]);
    colors[index] = int(dot(vec2(first_last), vec2(1.0, 1.0)) + 0.5);
    if (!check(index, first_last.x, first_last.y))
    {
        colors[index]--;
    }
    if (!check(index, first_last.x, first_last.y))
    {
        colors[index] = 0;
    }
    if (!check(index, first_last.x, first_last.y))
    {
        colors[index] = 1;
    }
    if (!check(index, first_last.x, first_last.y))
    {
        colors[index] = -1;
    }
}
